name: 'Ubuntu-22.04  '
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@1.2.0
        with:
          vulkan-query-version: latest
          vulkan-components: Glslang
          vulkan-use-cache: true
      - name: Update
        run: sudo apt-get update
      - name: Install dependencies
        run: |
          sudo apt-get install clang-14 wget unzip libsdl2-dev libdrm-dev libgbm-dev -y &&
          echo "CC=/usr/bin/clang-14" >> $GITHUB_ENV &&
          echo "CXX=/usr/bin/clang++-14" >> $GITHUB_ENV &&
          echo "CMAKE_BUILD_PARALLEL_LEVEL=$(expr $(nproc --all) \* 8)" >> $GITHUB_ENV &&
          echo "LLVM_PROFILE_FILE=\"gearoenix.profraw\"" >> $GITHUB_ENV &&
          cat $GITHUB_ENV
      - name: Echos
        run: |
          echo $HOME
          echo `pwd`
          echo $CMAKE_BUILD_PARALLEL_LEVEL
          echo $LLVM_PROFILE_FILE
      - name: Install CMake
        run: |
          CMAKE_VER="3.23.2" &&
          wget "https://github.com/Kitware/CMake/releases/download/v${CMAKE_VER}/cmake-${CMAKE_VER}-linux-x86_64.tar.gz" &&
          tar -xf "cmake-${CMAKE_VER}-linux-x86_64.tar.gz" &&
          ls &&
          rm "cmake-${CMAKE_VER}-linux-x86_64.tar.gz" &&
          echo "`pwd`/cmake-${CMAKE_VER}-linux-x86_64/bin" >> $GITHUB_PATH
      - name: Building Release
        run: |
          mkdir build &&
          cd build &&
          cmake .. &&
          cmake --build . --config Release
      - name: Building debug, tests and coverage
        run: |
          mkdir build-debug &&
          cd build-debug &&
          cmake .. -DCMAKE_BUILD_TYPE=Debug -DGX_COVERAGE_ENABLED=ON &&
          cmake --build . --config Debug &&
          cd tests &&
          ctest &&
          llvm-profdata-14 merge -sparse $LLVM_PROFILE_FILE -o gearoenix.profdata &&
          llvm-cov-14 show ./GearoenixGameEngineTests -instr-profile=gearoenix.profdata > coverage.txt
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build-debug/tests/coverage.txt
          flags: unittests
          name: gearoenix-test-coverage
          fail_ci_if_error: true
          verbose: true