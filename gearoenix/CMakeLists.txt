SET(GX_ENGINE_SRC_DIR "${CMAKE_SOURCE_DIR}/gearoenix")

MESSAGE(STATUS "Gearoenix game engine source directory is ${GX_ENGINE_SRC_DIR}.")

#ADD_SUBDIRECTORY(ai)
#ADD_SUBDIRECTORY(audio)
ADD_SUBDIRECTORY(core)
ADD_SUBDIRECTORY(math)
ADD_SUBDIRECTORY(opengl)
ADD_SUBDIRECTORY(physics)
ADD_SUBDIRECTORY(render)
ADD_SUBDIRECTORY(platform)
ADD_SUBDIRECTORY(vulkan)

IF(WIN32)
    ADD_SUBDIRECTORY(direct3d)
ELSEIF(APPLE)
    ADD_SUBDIRECTORY(metal)
ENDIF(WIN32)

SET(GX_ENGINE_SRC
        ${GX_ENGINE_AI_SRC}
        ${GX_ENGINE_AUDIO_SRC}
        ${GX_ENGINE_CORE_SRC}
        ${GX_ENGINE_D3D_SRC}
        ${GX_ENGINE_MATH_SRC}
        ${GX_ENGINE_METAL_SRC}
        ${GX_ENGINE_OPENGL_SRC}
        ${GX_ENGINE_PHYSICS_SRC}
        ${GX_ENGINE_PLATFORM_SRC}
        ${GX_ENGINE_RENDER_SRC}
        ${GX_ENGINE_VULKAN_SRC})

SET(GX_ENGINE_TEST_SRC
        ${GX_ENGINE_AI_TEST_SRC}
        ${GX_ENGINE_AUDIO_TEST_SRC}
        ${GX_ENGINE_CORE_TEST_SRC}
        ${GX_ENGINE_MATH_TEST_SRC}
        ${GX_ENGINE_PHYSICS_TEST_SRC}
        ${GX_ENGINE_PLATFORM_TEST_SRC}
        ${GX_ENGINE_RENDER_TEST_SRC}
        ${GX_ENGINE_VULKAN_TEST_SRC}
        PARENT_SCOPE)


SOURCE_GROUP(TREE ${GX_ENGINE_SRC_DIR} FILES ${GX_ENGINE_SRC})

SET(GX_ENGINE_IMGUI_SRC
        ${GX_IMGUI_PATH}/imgui.cpp
        ${GX_IMGUI_PATH}/imgui_demo.cpp
        ${GX_IMGUI_PATH}/imgui_draw.cpp
        ${GX_IMGUI_PATH}/imgui_tables.cpp
        ${GX_IMGUI_PATH}/imgui_widgets.cpp
        ${GX_IMGUI_PATH}/backends/imgui_impl_opengl3.cpp
        ${GX_IMGUI_PATH}/backends/imgui_impl_vulkan.cpp
        ${GX_IMGUI_PATH}/misc/cpp/imgui_stdlib.cpp
        ${GX_IMGUI_FB_PATH}/ImGuiFileDialog.cpp)

SOURCE_GROUP("imgui" FILES ${GX_ENGINE_IMGUI_SRC})

SET(GX_ENGINE_SRC ${GX_ENGINE_SRC} ${GX_ENGINE_IMGUI_SRC})

ADD_LIBRARY(GearoenixGameEngine STATIC ${GX_ENGINE_SRC})

IF(GX_HAS_D3D_DEPENDENCY)
	ADD_DEPENDENCIES(GearoenixGameEngine GX_D3D_SHADERS_TARGET) # TODO remove this and move it into the target prepare function
ENDIF()

FOREACH(GX_LIB ${GX_DEBUG_LIBS})
    TARGET_LINK_LIBRARIES(GearoenixGameEngine debug ${GX_LIB})
ENDFOREACH()

FOREACH(GX_LIB ${GX_RELEASE_LIBS})
    TARGET_LINK_LIBRARIES(GearoenixGameEngine optimized ${GX_LIB})
ENDFOREACH()

FUNCTION(GX_ENGINE_PREPARE_TARGET GX_CURRENT_TARGET)
    MESSAGE(STATUS "Preparing target ${GX_CURRENT_TARGET}")
    IF(APPLE)
        GX_METAL_PREPARE_TARGET(${GX_CURRENT_TARGET})
        TARGET_LINK_LIBRARIES(${GX_CURRENT_TARGET} "-framework Metal")
        TARGET_LINK_LIBRARIES(${GX_CURRENT_TARGET} "-framework MetalKit")
        IF (GX_IN_IOS)
            TARGET_LINK_LIBRARIES(${GX_CURRENT_TARGET} "-framework UIKit")
        ELSE (GX_IN_IOS)
            TARGET_LINK_LIBRARIES(${GX_CURRENT_TARGET} "-framework Cocoa")
        ENDIF (GX_IN_IOS)
    ELSEIF(WIN32)
        GX_D3D_PREPARE_TARGET(${GX_CURRENT_TARGET})
    ENDIF(APPLE)
    TARGET_LINK_LIBRARIES(${GX_CURRENT_TARGET} GearoenixGameEngine)
ENDFUNCTION(GX_ENGINE_PREPARE_TARGET)

SET(GX_ENGINE_SRC_DIR ${GX_ENGINE_SRC_DIR} PARENT_SCOPE)